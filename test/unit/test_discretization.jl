# test/test_discretization.jl
module TestDiscretization

export runTestDiscretization

using Test
using YAML
using LinearAlgebra
using ..MainModule
using DifferentialEquations
using Plots

function runTestDiscretization()
    config_path = joinpath(@__DIR__, "..", "..", "configs", "config6dof.yaml")
    params = Parameters.load_parameters(config_path)

    # normalize the parameters
    nondimensionalize!(params)

    # initialize the trajectory with the python library trajectory for K = 5
    # x_ref, u_ref = initialize_trajectory6dof(params)
    # x_ref = Array{Float64,2}(x_ref)
    # u_ref = Array{Float64,2}(u_ref)
    x_ref = [1 0.9466666666666668 0.8933333333333333 0.84 0.7866666666666666; 0.4414491704919722 0.3531593363935778 0.2648695022951833 0.1765796681967889 0.08828983409839444; 0.2869150025298687 0.229532002023895 0.1721490015179212 0.1147660010119475 0.05738300050597375; 0.8501778703278714 0.6801422962622972 0.5101067221967228 0.3400711481311486 0.1700355740655743; -0.1737444610547443 -0.1389955688437955 -0.1042466766328466 -0.06949778442189773 -0.03474889221094887; -0.1431741494145513 -0.1145393195316411 -0.08590448964873081 -0.05726965976582054 -0.02863482988291027; -0.128138378070336 -0.1042110581969245 -0.08028373832351306 -0.05635641845010161 -0.03242909857669016; 1 1 1 1 1; 0 0 0 0 0; 0 0 0 0 0; 0 0 0 0 0; -0.1693034649536237 -0.1354427719628989 -0.1015820789721742 -0.06772138598144947 -0.03386069299072474; -0.2476251961895094 -0.1981001569516075 -0.1485751177137056 -0.09905007847580377 -0.04952503923790189; 0 0 0 0 0]
    u_ref = [0 0 0 0 0; 0 0 0 0 0; 0.01360284592524594 0.01360284592524594 0.01360284592524594 0.01360284592524594 0.01360284592524594]
    println(size(x_ref))
    println(size(u_ref))
    
    println("initializing the python arrays")
    A_bar_py =[1 1 1 1; 0.02808524413676283 0.02566790796780252 0.02202172989726951 0.0168301484491103; -0.0192021216725595 -0.01754936825465 -0.01505644511646194 -0.01150691646878098; -0.08654636965016044 -0.1004397411149937 -0.1162810892938709 -0.1344221759074887; 0.02159436624225333 0.02005484032190397 0.01741991749187707 0.01343116086546793; -0.0147642529296295 -0.0137116658879554 -0.01191014660852165 -0.009182999581080445; -0.04130728987648193 -0.05007437724666419 -0.05987405477315499 -0.07077725228201465; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 3.750000000000001 3.75 3.749999999999998 3.75; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 3.750000000000001 3.75 3.749999999999998 3.75; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 3.750000000000001 3.75 3.749999999999998 3.75; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; -0.05587180779544938 -0.04832271896576379 -0.03910792388076591 -0.02809228179733282; 0.03820003294718511 0.03303865633537074 0.02673842210745404 0.01920693338129488; -0.01946494166489578 -0.01336539030564409 -0.008064824927458492 -0.00384605043865331; -0.04288281434174533 -0.03768398879752815 -0.03087313682892473 -0.02237038575227444; 0.02931934700806508 0.02576486550993926 0.0211082277553213 0.01529482410711834; -0.0203593206818349 -0.01408869477699935 -0.008552906977300264 -0.004096606870632526; 0.8459546626065946 0.9004667834879048 0.9435966733598296 0.9747991545665702; -0.3009698961348705 -0.2454722625080911 -0.186871769286895 -0.1259091482377346; -0.4402020336556521 -0.359030556045024 -0.2733208002838186 -0.184156169178012; -5.485941231019848e-17 4.523031122035007e-17 2.653992648059857e-16 -8.964982024024943e-17; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; -5.947581473878105e-18 -3.931337685448226e-17 -7.551748530015979e-17 1.467375548245105e-18; -0.1725203243702827 -0.1894775613761338 -0.2069375502682444 -0.2248665163868949; 0.03820003294718506 0.03303865633537065 0.02673842210745394 0.01920693338129484; -9.132323414830887e-18 -4.28897851785306e-17 -6.256240317557505e-17 6.719396749592934e-18; -0.08221923288653696 -0.09430234853474657 -0.1063489175170636 -0.1181481691829344; 0.02931934700806504 0.02576486550993918 0.02110822775532126 0.01529482410711836; 0.3009698961348705 0.2454722625080911 0.186871769286895 0.1259091482377346; 0.8459546626065946 0.9004667834879048 0.9435966733598296 0.9747991545665702; 5.485941231019848e-17 -4.523031122035007e-17 -2.653992648059857e-16 8.964982024024943e-17; -0.4402020336556521 -0.359030556045024 -0.2733208002838186 -0.184156169178012; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0.1725203243702843 0.1894775613761339 0.2069375502682446 0.2248665163868943; -8.757656582958497e-18 -4.906611277392107e-17 -7.479985864579985e-17 -1.261268593079921e-18; 0.05587180779544931 0.04832271896576385 0.03910792388076637 0.02809228179733279; 0.08221923288653743 0.09430234853474664 0.1063489175170636 0.1181481691829339; -1.079399024058145e-17 -5.157314790261295e-17 -6.192781815134651e-17 4.329312069827078e-18; 0.0428828143417453 0.03768398879752823 0.03087313682892501 0.02237038575227441; 0.4402020336556521 0.3590305560450236 0.2733208002838186 0.1841561691780116; -3.36552772780488e-17 1.267530046446735e-16 2.558415591263997e-16 -6.982412455168075e-17; 0.8459546626065944 0.9004667834879048 0.9435966733598297 0.9747991545665703; 0.3009698961348705 0.2454722625080911 0.186871769286895 0.1259091482377344; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; -0.03820003294718512 -0.03303865633537075 -0.02673842210745403 -0.01920693338129487; -0.05587180779544938 -0.04832271896576373 -0.03910792388076593 -0.02809228179733274; -2.069786810926614e-17 -9.195604370952603e-17 -8.133310282603195e-17 1.579014363425494e-17; -0.02931934700806508 -0.02576486550993926 -0.02110822775532129 -0.01529482410711833; -0.04288281434174531 -0.03768398879752812 -0.03087313682892474 -0.02237038575227439; -1.758566595180307e-17 -7.475467768974995e-17 -6.587689615995414e-17 1.327650645840861e-17; 3.36552772780488e-17 -1.267530046446735e-16 -2.558415591263997e-16 6.982412455168075e-17; 0.4402020336556521 0.3590305560450236 0.2733208002838186 0.1841561691780116; -0.3009698961348705 -0.2454722625080911 -0.186871769286895 -0.1259091482377344; 0.8459546626065944 0.9004667834879048 0.9435966733598297 0.9747991545665703; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; -0.006682764125174969 -0.004619604745820977 -0.002802026966925675 -0.00134121526090173; -0.1082462091432367 -0.118806909458856 -0.1296941675851634 -0.1408914778972905; 0.03508197395621471 0.03058619446473325 0.02490618701282574 0.01796891560207468; -0.008706645850476645 -0.006073349815868487 -0.003709584041595995 -0.001784479917471477; -0.08063533989078253 -0.09096107414495522 -0.1013611255177616 -0.1117045598865713; 0.03587375917205504 0.03178979466837108 0.02620871599149509 0.01907432851302677; 0.5643185552439046 0.4602604921981548 0.3503845674111069 0.2360796529452868; 1.716683159233933 1.772870785417935 1.817197312485706 1.849196693492117; -0.08923638721310274 -0.05777034156503138 -0.03278625231857495 -0.01466437161657355; 1.601435422577439e-15 1.716731987018192e-15 1.195011655915687e-15 -6.476943361371484e-16; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0.1030409844286802 0.115208685678393 0.127511660504874 0.1398468013693112; 0.006682764125174938 0.004619604745820917 0.002802026966925599 0.001341215260901696; 0.05131129883255858 0.04473572001077971 0.03642807574595752 0.02628154274630643; 0.0738537077228795 0.08623052403581453 0.09847171955155351 0.1103146232084139; 0.008706645850476608 0.006073349815868407 0.003709584041595914 0.001784479917471454; 0.05246937300112983 0.04649611951968032 0.038333169619694 0.0278983323909833; 0.8253788130912194 0.6731822925778196 0.5124765005295021 0.3452928172080907; -0.08923638721310248 -0.05777034156503091 -0.03278625231857442 -0.01466437161657332; 1.647176673675124 1.727873295748971 1.791660003720994 1.837774571128932; 5.464772544764287e-16 1.463279762750237e-15 1.209210150387394e-15 4.027344718322702e-16; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; -0.01831191623619531 -0.01571709743307367 -0.01264516149715648 -0.009045564415923414; -0.02678321942103098 -0.02298800757834834 -0.01849495872656316 -0.01323014661130173; -1.336212938706743e-17 -3.423793783020175e-17 -3.798994507097979e-17 -1.670474306956968e-17; -0.01915331581105954 -0.01656767093598655 -0.01341044486035739 -0.009634850589217932; -0.0280138601220739 -0.02423206617212892 -0.01961427098048014 -0.01409204334988188; -1.58864620973362e-17 -4.439131851070631e-17 -4.069660350595508e-17 -1.147988387555166e-17; 1.404469267685115e-17 -1.835321041433213e-17 7.293536435020856e-18 -5.322507544666879e-18; -6.00973488723905e-16 -1.778475930342862e-15 -1.005673754572984e-15 -7.241722971615838e-16; -1.712051031912803e-16 -7.754654033480973e-16 -1.242695424731439e-15 1.719841278049696e-16; 1.777694840547493 1.81236886214446 1.839613553667121 1.859222849813265; 0 0 0 0; 0 0 0 0; 1 1 1 1]
    println("A_bar_py done")
    B_bar_py =[0 0 0 0; -0.1234829535071933 -0.4054972537925782 -0.665820351947654 -0.8934083914914406; -0.343426197711277 -0.2386773582140382 -0.1453663575036426 -0.06978463551876772; -1.690521024769238 -1.499739833947849 -1.237275075614749 -0.9008232595963467; -2.416314363346294 -3.018964769047541 -3.603806475484286 -4.152540090156797; -0.617267899217515 -0.4314746353924839 -0.2639614022448152 -0.1271202577735013; -2.758089858938658 -2.468097049755883 -2.049580370354164 -1.499145027447259; -63.71076748255965 -51.96275920251677 -39.55792255295937 -26.65305922717426; 7.235696549176265 4.6835423662634 2.657713877789496 1.188617856689725; -127.3827546487221 -133.5274047690066 -138.3845495159237 -141.8960742929163; 11.12670714925456 9.004085841480189 6.813420689048513 4.571178127385463; 0 0 0 0; -115.7845945366496 -115.7845945366503 -115.7845945366498 -115.78459453665; 0 0 0 0; 0 0 0 0; -0.3434261977112785 -0.2386773582140422 -0.1453663575036448 -0.06978463551876722; -0.3909786332093522 -0.5914037530361014 -0.7790466371447657 -0.9477638502050864; 1.155823686259054 1.025384954049749 0.8459355535129722 0.6159005687117707; -0.6172678992175172 -0.4314746353924889 -0.2639614022448195 -0.1271202577735019; -2.897106153139644 -3.355041636909591 -3.80940679129934 -4.251554434384635; 1.885729630737578 1.68745906634515 1.40131563242185 1.024978279757018; 43.55959674393161 35.5273829840969 27.04609004916274 18.22292459819536; 133.0186600614125 137.1754297508716 140.4546507048576 142.8218922520595; -7.235696549176291 -4.683542366263455 -2.657713877789548 -1.188617856689741; 16.27404992291289 13.16947957098526 9.965387508811533 6.685857734341559; 115.7845945366496 115.7845945366503 115.7845945366498 115.78459453665; 0 0 0 0; 0 0 0 0; -0.3986055711564293 -0.3986055711564266 -0.3986055711564294 -0.3986055711564318; -1.055522299992277 -0.9063191147477285 -0.7294875853401428 -0.5220658577311134; 0.7216696260090865 0.6196581318932465 0.4987569025254463 0.3569408929623474; 4.427059813519902 4.787264549924655 5.166968010992288 5.568486850794127; -0.5547343533275246 -0.4802673083725297 -0.3890979830200522 -0.279815456117899; 0.379276622865473 0.328362867198664 0.2660296195438241 0.1913122210394242; 1.701093120912346 1.86989176023171 2.043890055847199 2.222754607612282; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
    println("B_bar_py done")
    C_bar_py = [0 0 0 0; 0.954334678217458 1.011822857307922 1.074889917115851 1.144962935922789; 0.03361117493527432 0.02245698220983439 0.01325840122323798 0.00622266332889829; 0.2361206917233685 0.198343495153171 0.1568236974260012 0.1107476472202622; 0.1658592303780177 0.1254955246269822 0.08927599151203802 0.06006676743266343; -0.04254382747698315 -0.03072578708728006 -0.01925527296943873 -0.009428390112050595; -0.1565288917372579 -0.149031133316886 -0.1292564765565019 -0.09731741929831911; -31.85538373184734 -25.98137959361098 -19.77896127070953 -13.32652960975564; 3.096502359339836 2.005373206227786 1.138429052280498 0.5092904646675975; -63.33492864405454 -66.53370419075378 -69.06207756292727 -70.88990927526599; 11.12670716132237 9.004085850711052 6.813420694707951 4.571178129290045; 0 0 0 0; -115.7845945367789 -115.7845945367789 -115.7845945367788 -115.7845945367788; 0 0 0 0; 0 0 0 0; 0.03361117493527337 0.02245698220983446 0.01325840122323812 0.006222663328898905; 0.9805145216447329 1.029314667077574 1.08521692498716 1.149809786768205; -0.1614377368344183 -0.1356091443729496 -0.1072217034842488 -0.07571911379931714; -0.04254382747698371 -0.03072578708728053 -0.01925527296943914 -0.009428390112050367; 0.1327217175035488 0.1015631183164785 0.07427800252594687 0.05272296652775411; 0.1070201423129276 0.1018938607410716 0.08837375875096522 0.0665367520797079; 21.77979836551674 17.76369148681986 13.52304502063629 9.111462296478054; 65.74680347722438 68.09569530392875 69.9488033140842 71.28659712237854; -3.096502359339851 -2.005373206227823 -1.13842905228053 -0.509290464667603; 16.27404994056332 13.16947958448627 9.965387517088924 6.685857737127229; 115.7845945367789 115.7845945367789 115.7845945367788 115.7845945367788; 0 0 0 0; 0 0 0 0; -0.3986055711568731 -0.3986055711568728 -0.3986055711568727 -0.3986055711568728; -1.009137130952539 -0.8799947935105034 -0.7167351739818474 -0.5172258295119958; 0.6899556891329829 0.6016599682709786 0.4900379697888143 0.3536317242647515; 1.935312452313531 2.202666486968365 2.469505538298291 2.732322287482347; -1.032754497233401 -0.9154148115586693 -0.7549121046417007 -0.54958268519598; 0.7061030844948382 0.62587693761236 0.516139863866915 0.375754383293804; 1.335572155125294 1.614948401453321 1.888190717883957 2.147866969932231; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
    println("C_bar_py done")
    S_bar_py = [-0.0007229560225851448 -0.0007229560225851447 -0.0007229560225851446 -0.0007229560225851448; -0.04879646705640792 -0.03945939081064079 -0.02992081126182734 -0.02017074432450881; -0.03212861897762739 -0.0254142216941672 -0.01883759394276745 -0.01240556192806544; -0.03739514960909538 -0.02990293018472322 -0.02241527909358531 -0.01495854266700106; -0.002560555986446072 -0.002349662523327121 -0.001987694201629187 -0.001472533317309571; 0.001750674032303618 0.0016064843674733 0.001359003529457083 0.00100678362588501; -0.002687389162802507 -0.001910978633218341 -0.001161469261573669 -0.000476934457874487; -0.01999504515117101 -0.01304643164713028 -0.007448936612643051 -0.003345928129411098; -0.01790288194662132 -0.01524521465201467 -0.01198156397388991 -0.008251843725099147; -0.02618496116192362 -0.02229782639233282 -0.01752437335233728 -0.01206924159474588; -2.42861286636753e-17 -1.561251128379126e-17 -2.732189474663471e-17 -2.255140518769849e-17; 0 0 0 0; 0 0 0 0; 0 0 0 0]
    println("S_bar_py done")
    z_bar_py = [0.01084434033877719 0.01084434033877717 0.01084434033877717 0.01084434033877717; 0.7842670386003032 0.6382493882789101 0.4870265551068309 0.3303683134559481; 0.4461576306967278 0.3495176045290279 0.2564364064042688 0.167071443553873; 0.5680131241414165 0.4523682618541238 0.3384204203394745 0.2271928233567943; 0.07666372052202869 0.07034662126053333 0.05950560150394748 0.04407901726844612; -0.05241564154353025 -0.04809658673858754 -0.04068448879110764 -0.03013720118201217; 0.05829422826692639 0.04086929821569401 0.02495525889498656 0.01182794349648342; 0.5998513545351301 0.3913929494139096 0.2234680983792897 0.1003778438823327; 0.5370864583986399 0.4573564395604408 0.3594469192166973 0.2475553117529743; 0.7855488348577075 0.6689347917699876 0.5257312005701121 0.362077247842375; 2.775557561562891e-16 1.054711873393899e-15 -4.163336342344337e-16 5.273559366969494e-16; 0 0 0 0; 0 0 0 0; 0 0 0 0]
    println("python arrays initialized")
    # println("x_ref: ", x_ref)
    # println("u_ref: ", u_ref)

    # make discretization matrices
    println("calling calculate_discretization")
    sigma = 15
    A_bar, B_bar, C_bar, S_bar, z_bar = calculate_discretization(x_ref, u_ref, 15, params)
    
    # first, test that all the matrices are the same shape
    println("Testing array shapes")
    @test size(A_bar) == size(A_bar_py)
    @test size(B_bar) == size(B_bar_py)
    @test size(C_bar) == size(C_bar_py)
    @test size(S_bar) == size(S_bar_py)
    @test size(z_bar) == size(z_bar_py)

    # second, test if the matrices are the same
    println("Testing array values")
    # @test A_bar ≈ A_bar_py atol=1e-2
    # @test B_bar ≈ B_bar_py atol=1e-2
    # @test C_bar ≈ C_bar_py atol=1e-2
    # @test S_bar ≈ S_bar_py atol=1e-2
    # @test z_bar ≈ z_bar_py atol=1e-2

    println("-----------------")
    println("A_bar: ", A_bar)
    println("-----------------")
    println("B_bar: ", B_bar)
    println("-----------------")
    println("C_bar: ", C_bar)
    println("-----------------")
    println("S_bar: ", S_bar)
    println("-----------------")
    println("z_bar: ", z_bar)
    println("-----------------")


end # function runTestDiscretization

end # module TestDiscretization