# test/test_discretization.jl
module TestDiscretization

export runTestDiscretization

using Test
using YAML
using LinearAlgebra
using ..MainModule
using DifferentialEquations
using Plots

function runTestDiscretization()
    config_path = joinpath(@__DIR__, "..", "..", "configs", "config6dof.yaml")
    params = Parameters.load_parameters(config_path)

    # normalize the parameters
    nondimensionalize!(params)

    # initialize the trajectory with the python library trajectory for K = 5
    x_ref, u_ref = initialize_trajectory6dof(params)
    # x_ref = Array{Float64,2}(x_ref)
    # u_ref = Array{Float64,2}(u_ref)
    println(size(x_ref))
    println(size(u_ref))
    
    println("initializing the python arrays")
    A_bar_py = [1 1 1 1; -0.02068674757215157 -0.01876663612900204 -0.01600838972156607 -0.01218428969780667; 0.02068674757215157 0.01876663612900204 0.01600838972156607 0.01218428969780667; -0.09174925079060357 -0.1051341629998649 -0.1205330863487477 -0.1383769476064705; -0.01613355491392458 -0.01479480958330685 -0.01272646927693523 -0.009744971733667077; 0.01613355491392458 0.01479480958330685 0.01272646927693523 0.009744971733667077; -0.04553472606692672 -0.05367743315241739 -0.06286977640911419 -0.07326823359560995; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 3.75 3.750000000000001 3.749999999999999 3.750000000000001; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 3.75 3.750000000000001 3.749999999999999 3.750000000000001; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 3.75 3.750000000000001 3.749999999999999 3.750000000000001; 0 0 0 0; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0.04115191891888236 0.03532939402786241 0.02842852943093056 0.02033743564366138; -0.04115191891888236 -0.03532939402786241 -0.02842852943093056 -0.02033743564366138; -0.01367708275062316 -0.00934542784784626 -0.005617697957634482 -0.002671746803497491; 0.03203683917704608 0.0277991658645256 0.02255452500721637 0.01623066657733896; -0.03203683917704608 -0.0277991658645256 -0.02255452500721637 -0.01623066657733896; -0.01440453927763628 -0.009894573047377337 -0.005972375802507843 -0.002848911455174214; 0.8948057952861517 0.9322404424573467 0.9616939461101514 0.9829141474353469; 0.3156917711330171 0.2558590993563198 0.19383595385666 0.1301533302905187; 0.3156917711330171 0.2558590993563198 0.19383595385666 0.1301533302905187; 3.633809967270016e-18 9.348692820744137e-19 -3.653402753856775e-19 1.624977272876416e-18; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; -1.802846946766891e-19 -7.659142030485033e-21 6.536828986000299e-20 -2.795651580026404e-19; -0.1828720527646859 -0.1983195019760963 -0.214495708925937 -0.2314777700808335; -0.04115191891888222 -0.0353293940278623 -0.02842852943093056 -0.02033743564366156; 1.934454337616032e-19 -1.123817612605497e-19 -3.856959576871577e-21 -1.999676284564594e-19; -0.09061250938785441 -0.1010731397385675 -0.1116608923117193 -0.1223018646996306; -0.03203683917704601 -0.0277991658645255 -0.02255452500721638 -0.01623066657733904; -0.3156917711330171 -0.2558590993563198 -0.19383595385666 -0.1301533302905187; 0.8948057952861517 0.9322404424573467 0.9616939461101514 0.9829141474353469; -3.633809967270016e-18 -9.348692820744137e-19 3.653402753856775e-19 -1.624977272876416e-18; 0.3156917711330171 0.2558590993563198 0.19383595385666 0.1301533302905187; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0.1828720527646859 0.1983195019760963 0.214495708925937 0.2314777700808335; 1.802846946766891e-19 7.659142030485033e-21 -6.536828986000299e-20 2.795651580026404e-19; -0.04115191891888222 -0.0353293940278623 -0.02842852943093056 -0.02033743564366156; 0.09061250938785441 0.1010731397385675 0.1116608923117193 0.1223018646996306; -1.934454337616032e-19 1.123817612605497e-19 3.856959576871577e-21 1.999676284564594e-19; -0.03203683917704601 -0.0277991658645255 -0.02255452500721638 -0.01623066657733904; -0.3156917711330171 -0.2558590993563198 -0.19383595385666 -0.1301533302905187; -3.633809967270016e-18 -9.348692820744137e-19 3.653402753856775e-19 -1.624977272876416e-18; 0.8948057952861517 0.9322404424573467 0.9616939461101514 0.9829141474353469; -0.3156917711330171 -0.2558590993563198 -0.19383595385666 -0.1301533302905187; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0.04115191891888234 0.0353293940278624 0.02842852943093055 0.0203374356436614; 0.04115191891888234 0.0353293940278624 0.02842852943093055 0.0203374356436614; -7.65662444003487e-20 1.31776036211058e-19 -8.827316849655932e-21 -3.630286481573404e-20; 0.03203683917704607 0.0277991658645256 0.02255452500721637 0.01623066657733896; 0.03203683917704607 0.0277991658645256 0.02255452500721637 0.01623066657733896; -2.15315368219288e-19 2.525428313979348e-19 3.914752852166209e-20 4.54901614327709e-20; 3.633809967270016e-18 9.348692820744137e-19 -3.653402753856775e-19 1.624977272876416e-18; -0.3156917711330171 -0.2558590993563198 -0.19383595385666 -0.1301533302905187; 0.3156917711330171 0.2558590993563198 0.19383595385666 0.1301533302905187; 0.8948057952861517 0.9322404424573467 0.9616939461101514 0.9829141474353469; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; -0.005069510599225848 -0.003479669001834527 -0.002099046110243978 -0.001000807970540108; -0.1128220530466008 -0.1230344041576164 -0.1336371834027348 -0.1446553455920473; -0.03806394142146332 -0.03285419361088243 -0.02654659181458718 -0.01904744274528117; -0.006658177486145718 -0.004598021928460665 -0.002786802850049952 -0.001333237712471649; -0.08512060620305997 -0.09495040794788107 -0.1049031214695966 -0.1149103489832222; -0.03949311400390496 -0.03445873898753856 -0.02807546967738062 -0.02026378201374038; -0.591922070868084 -0.4797358112899617 -0.3634424134800013 -0.2440374942944428; 1.74327073871801 1.790203323743575 1.827086580631343 1.853636577621424; -0.06550987257516987 -0.04225249414836375 -0.02391043168185 -0.01067255118329423; 1.282742803266392e-15 1.537495667133284e-15 -1.895658809722595e-15 -2.781099322078133e-15; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0.1128220530466008 0.1230344041576164 0.1336371834027348 0.1446553455920473; 0.005069510599225851 0.003479669001834525 0.002099046110243979 0.001000807970540108; -0.03806394142146331 -0.03285419361088244 -0.02654659181458717 -0.01904744274528117; 0.08512060620305997 0.09495040794788104 0.1049031214695965 0.1149103489832222; 0.00665817748614572 0.004598021928460665 0.002786802850049953 0.001333237712471649; -0.03949311400390496 -0.03445873898753857 -0.0280754696773806 -0.02026378201374038; -0.591922070868084 -0.4797358112899618 -0.3634424134800013 -0.2440374942944429; -0.06550987257516988 -0.04225249414836374 -0.02391043168185 -0.01067255118329423; 1.74327073871801 1.790203323743575 1.827086580631342 1.853636577621424; -1.279429960184651e-15 -1.513060366726397e-15 1.945402412463179e-15 2.812373497887756e-15; 0 0 0 0; 1 1 1 1; 0 0 0 0; 0 0 0 0; 0.01959097794154735 0.01673292416955055 0.01341126598132151 0.009567488485498262; 0.01959097794154735 0.01673292416955055 0.01341126598132151 0.009567488485498262; 7.291701014306412e-34 2.632118985171846e-34 -8.316801229981198e-35 3.023309907114625e-34; 0.02063298266097471 0.01771616486558183 0.01425799696457315 0.01020191266174713; 0.02063298266097471 0.01771616486558183 0.01425799696457315 0.01020191266174713; 8.978391237277189e-34 -1.878411567982799e-35 9.703792399386754e-35 4.84923634658087e-34; 3.125144490627915e-33 -3.338105766743516e-33 -1.730580185406481e-33 -1.520633291084688e-33; -2.021360854007516e-15 -1.233329113813084e-15 9.987161127584189e-16 1.548456330520731e-15; 2.021360854007516e-15 1.233329113813084e-15 -9.987161127584189e-16 -1.548456330520731e-15; 1.808780611293182 1.832455817891937 1.850997012313198 1.864309128804729; 0 0 0 0; 0 0 0 0; 1 1 1 1]    
    println("A_bar_py done")
    B_bar_py = [0 0 0 0; -0.4483877190404879 -0.632166398221331 -0.8042763815656689 -0.9600122453484514; -0.2556845355403519 -0.1761314237896812 -0.1065438237360073 -0.05090078871029825; 1.244114031179896 1.08619262531404 0.8853374448123845 0.6391641531516453; -2.977473031274149 -3.413527105090642 -3.846263768664546 -4.269669616493425; -0.4619276674894573 -0.3194421766243425 -0.1938171226308439 -0.09279559195525351; 2.045573881692245 1.796203288723068 1.470511600785464 1.064941875506632; 44.62937611576235 36.17082553917587 27.40260748122919 18.39978884906936; 5.187762560833667 3.345641607536429 1.893122480571264 0.8449560245181726; -131.6865440941215 -135.1365628197682 -137.847888343181 -139.7996237937277; -11.31998001393164 -9.126437179211782 -6.886127698791285 -4.610490807586451; 0 0 0 0; -113.0960771036519 -113.0960771036519 -113.0960771036523 -113.0960771036512; 0 0 0 0; 0 0 0 0; -0.2556845355403519 -0.1761314237896813 -0.1065438237360073 -0.05090078871029823; -0.4483877190404916 -0.6321663982213575 -0.8042763815656419 -0.960012245348455; -1.244114031179897 -1.086192625314043 -0.8853374448123865 -0.6391641531516458; -0.4619276674894572 -0.3194421766243424 -0.1938171226308439 -0.09279559195525351; -2.977473031274151 -3.413527105090658 -3.846263768664546 -4.269669616493426; -2.045573881692246 -1.796203288723071 -1.470511600785466 -1.064941875506632; -44.62937611576236 -36.17082553917589 -27.40260748122919 -18.39978884906936; 131.6865440941215 135.1365628197683 137.8478883431811 139.7996237937277; -5.187762560833668 -3.34564160753643 -1.893122480571264 -0.8449560245181731; -11.31998001393163 -9.12643717921175 -6.886127698791277 -4.610490807586447; 113.0960771036519 113.0960771036519 113.0960771036523 113.0960771036512; 0 0 0 0; 0 0 0 0; -0.3893499527278059 -0.3893499527278076 -0.3893499527278054 -0.3893499527278054; 0.7542214284828097 0.6444309547848733 0.5167110700201994 0.3687764995938713; -0.7542214284828097 -0.6444309547848733 -0.5167110700201994 -0.3687764995938713; 4.519563912796777 4.851022685753138 5.205560024291209 5.586936380551235; 0.399194105437973 0.3430325745421067 0.2763041814915161 0.1978779927916652; -0.399194105437973 -0.3430325745421067 -0.2763041814915161 -0.1978779927916652; 1.762068426813713 1.912264464335458 2.069705183868731 2.235156289522775; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
    println("B_bar_py done")
    C_bar_py = [0 0 0 0; 0.966148018070129 1.019455398423747 1.079268919799614 1.146973249171647; 0.02416273543982643 0.01620085850091172 0.009593380614781419 0.004512765421107986; -0.1655177577228259 -0.139257351651216 -0.1102739237459552 -0.07797193490602672; 0.1119833712209577 0.08695686568785518 0.06528846054649826 0.0483747985555428; -0.03278079260310206 -0.02315453560564054 -0.0142744521854015 -0.006911090263422561; 0.1227385451369288 0.1120089910285587 0.09430968249868543 0.06962342415761838; 22.31468805118864 18.08541276420022 13.70130373657314 9.199894421865709; 2.22114703689287 1.432949727194297 0.8110535438571668 0.3620676467059392; -65.47053778452637 -67.32841031365868 -68.78843645510659 -69.83940151115485; -11.31998002544442 -9.126437186832513 -6.88612770131547 -4.610490809769399; 0 0 0 0; -113.0960771037833 -113.0960771037833 -113.0960771037833 -113.0960771037832; 0 0 0 0; 0 0 0 0; 0.0241627354398264 0.01620085850091185 0.009593380614781294 0.004512765421107945; 0.9661480180701287 1.019455398423742 1.079268919799611 1.146973249171651; 0.1655177577228251 0.1392573516512159 0.110273923745954 0.07797193490602583; -0.03278079260310188 -0.02315453560564026 -0.01427445218540162 -0.006911090263422588; 0.1119833712209559 0.08695686568785382 0.06528846054649375 0.04837479855554103; -0.1227385451369296 -0.1120089910285583 -0.09430968249868611 -0.06962342415761966; -22.31468805118864 -18.0854127642002 -13.70130373657314 -9.199894421865705; 65.47053778452634 67.32841031365868 68.78843645510663 69.83940151115488; -2.221147036892871 -1.432949727194296 -0.8110535438571685 -0.3620676467059395; -11.31998002544441 -9.126437186832508 -6.886127701315471 -4.610490809769395; 113.0960771037833 113.0960771037833 113.0960771037833 113.0960771037832; 0 0 0 0; 0 0 0 0; -0.3893499527282586 -0.3893499527282586 -0.3893499527282585 -0.3893499527282587; 0.7312325382710946 0.6312747615324119 0.5101889698079425 0.3661543626422152; -0.7312325382710946 -0.6312747615324119 -0.5101889698079425 -0.3661543626422152; 2.068677574025401 2.295716444440936 2.526350140662908 2.75967158526785; 0.7593086059905655 0.6626789996463299 0.5400684855157337 0.3899183136418702; -0.7593086059905655 -0.6626789996463299 -0.5400684855157337 -0.3899183136418702; 1.507645154241597 1.736583835482849 1.963241105040139 2.184230268334427; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
    println("C_bar_py done")
    S_bar_py = [-0.0007229560225851472 -0.0007229560225851473 -0.000722956022585147 -0.0007229560225851451; -0.01775510209733034 -0.01393286986250392 -0.01023650857077533 -0.00667504947561749; -0.02576431189159415 -0.0208826613286357 -0.0158751398225793 -0.01073271611995225; -0.04820255473660781 -0.03862628728487835 -0.02903412955534203 -0.01943531934895883; 0.001988522141109157 0.001774755070472056 0.001470838340031939 0.001074330296175216; -0.001988522141109159 -0.001774755070472047 -0.001470838340031942 -0.001074330296175212; -0.002152652602681103 -0.001523125079215525 -0.0009170175584859583 -0.0003548572789555036; -0.01377465206930881 -0.008931167409910141 -0.005074613405313797 -0.002271604146005218; 0.01952163411708713 0.01627066514112941 0.01258854431708934 0.008577544068589835; 0.01952163411708712 0.01627066514112949 0.01258854431708931 0.008577544068589868; 5.204170427930421e-18 -2.168404344971009e-17 5.637851296924623e-18 -4.336808689942018e-18; 0 0 0 0; 0 0 0 0; 0 0 0 0] 
    println("S_bar_py done")
    z_bar_py = [0.01084434033877721 0.01084434033877721 0.0108443403387772 0.0108443403387772; 0.2269442055750401 0.1746353608102875 0.1255587223243084 0.07992804564787097; 0.4258470042588272 0.3475976070568077 0.266116003576012 0.1811884382856769; 0.7213654690934947 0.5770013265678945 0.433864617774819 0.2925271636370224; -0.05954052890789403 -0.05313648197424492 -0.04403343348385248 -0.03215946591765653; 0.0595405289078938 0.05313648197424529 0.0440334334838524 0.03215946591765667; 0.04174746274952792 0.02886189664135068 0.01739938026902178 0.008113243024563224; 0.4132395620792656 0.2679350222973034 0.1522384021594136 0.06814812438015663; -0.5856490235126146 -0.4881199542338838 -0.3776563295126787 -0.2573263220576963; -0.5856490235126169 -0.4881199542338803 -0.3776563295126794 -0.2573263220576951; 8.049116928532385e-16 -9.436895709313831e-16 1.249000902703301e-16 -1.665334536937735e-16; 0 0 0 0; 0 0 0 0; 0 0 0 0]
    println("python arrays initialized")
    # println("x_ref: ", x_ref)
    # println("u_ref: ", u_ref)

    # make discretization matrices
    println("calling calculate_discretization")
    sigma = 15
    A_bar, B_bar, C_bar, S_bar, z_bar = calculate_discretization(x_ref, u_ref, 15, params)
    
    # first, test that all the matrices are the same shape
    # println("Testing array shapes")
    # @test size(A_bar) == size(A_bar_py)
    # @test size(B_bar) == size(B_bar_py)
    # @test size(C_bar) == size(C_bar_py)
    # @test size(S_bar) == size(S_bar_py)
    # @test ssize(z_bar) == size(z_bar_py)

    # second, test if the matrices are the same
    @testset "Testing array values" begin
        @test A_bar ≈ A_bar_py atol=1e-4
        @test B_bar ≈ B_bar_py atol=1e-4
        @test C_bar ≈ C_bar_py atol=1e-4
        @test S_bar ≈ S_bar_py atol=1e-4
        @test z_bar ≈ z_bar_py atol=1e-4
    end
    
    #test relative tolerance
    @testset "Testing array values" begin
        @test A_bar ≈ A_bar_py rtol=1e-6
        @test B_bar ≈ B_bar_py rtol=1e-6
        @test C_bar ≈ C_bar_py rtol=1e-6
        @test S_bar ≈ S_bar_py rtol=1e-6
        @test z_bar ≈ z_bar_py rtol=1e-6
    end 
    # println("-----------------")
    # println("A_bar: ", A_bar)
    # println("-----------------")
    # println("B_bar: ", B_bar)
    # println("-----------------")
    # println("C_bar: ", C_bar)
    # println("-----------------")
    # println("S_bar: ", S_bar)
    # println("-----------------")
    # println("z_bar: ", z_bar)
    # println("-----------------")


end # function runTestDiscretization

end # module TestDiscretization